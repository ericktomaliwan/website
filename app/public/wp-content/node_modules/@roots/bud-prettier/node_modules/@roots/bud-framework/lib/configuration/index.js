import { __decorate } from "tslib";
import { bind } from '@roots/bud-support/decorators/bind';
import { BudError } from '@roots/bud-support/errors';
import DynamicConfiguration from './dynamic/index.js';
import StaticConfiguration from './static/index.js';
/**
 * User config parser
 */
class Configuration {
    bud;
    /**
     * Class constructor
     */
    constructor(bud) {
        this.bud = bud;
    }
    /**
     * Process configuration
     */
    async run(file) {
        if (!file?.module) {
            throw BudError.normalize(`No module found: ${file.name}${file.ext}`);
        }
        const config = await file.module().catch(error => {
            throw error;
        });
        if (typeof config === `function`) {
            return await new DynamicConfiguration(this.bud).execute(config);
        }
        await new StaticConfiguration(this.bud, `${file.name}${file.ext}`).execute(config);
    }
}
__decorate([
    bind
], Configuration.prototype, "run", null);
export default Configuration;

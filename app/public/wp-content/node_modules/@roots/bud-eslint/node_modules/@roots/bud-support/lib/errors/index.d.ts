interface BudErrorProps {
    details?: string;
    docs?: URL;
    file?: {
        path: string;
    };
    instance?: string;
    issue?: URL;
    name: string;
    origin?: BudError | Error;
    thrownBy?: string | URL;
}
/**
 * Error base class
 */
declare class BudError extends Error {
    /**
     * Details
     */
    details?: BudErrorProps[`details`];
    /**
     * Documentation URL
     */
    docs?: BudErrorProps[`docs`];
    /**
     * Information about file related to error
     */
    file?: string;
    /**
     * Instance name containing error
     */
    instance?: BudErrorProps[`instance`];
    /**
     * Issue tracker URL
     */
    issue?: BudErrorProps[`issue`];
    /**
     * Original error
     */
    origin?: BudErrorProps[`origin`];
    /**
     * Name of error
     */
    name: BudErrorProps[`name`];
    /**
     * Name of method that threw error
     */
    thrownBy?: BudErrorProps[`thrownBy`];
    /**
     * Is BudError
     */
    isBudError: boolean;
    /**
     * Normalize error
     */
    static normalize(source: BudError | Error | string, options?: Partial<BudErrorProps>): BudError;
    /**
     * Class constructor
     */
    constructor(message: string, options?: Partial<BudErrorProps>);
}
export { BudError };
export { render } from './render/index.js';
